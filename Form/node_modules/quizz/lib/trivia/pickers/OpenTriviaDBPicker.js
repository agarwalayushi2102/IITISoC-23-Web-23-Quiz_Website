"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var axios_1 = require("axios");
var he = require("he");
var Question_1 = require("../Question");
var OpenTriviaDBPicker = /** @class */ (function () {
    function OpenTriviaDBPicker() {
        this.client = axios_1.default.create({
            baseURL: 'https://opentdb.com'
        });
        this.getToken();
    }
    Object.defineProperty(OpenTriviaDBPicker.prototype, "ready", {
        get: function () {
            return !!this.token;
        },
        enumerable: true,
        configurable: true
    });
    OpenTriviaDBPicker.prototype.pickQuestion = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var res, entry, sanitizedQuestion, question, sanitizedAnswer;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.client.get("api.php?amount=1&type=multiple&token=" + this.token)];
                    case 1:
                        res = _a.sent();
                        entry = res.data.results[0];
                        sanitizedQuestion = he.decode(entry.question);
                        question = "[" + entry.category + " - " + entry.difficulty + "] " + sanitizedQuestion;
                        sanitizedAnswer = he.decode(entry.correct_answer);
                        return [2 /*return*/, new Question_1.Question(question, sanitizedAnswer)];
                }
            });
        });
    };
    OpenTriviaDBPicker.prototype.getToken = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var res;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.client.get('api_token.php?command=request')];
                    case 1:
                        res = _a.sent();
                        this.token = res.data.token;
                        return [2 /*return*/];
                }
            });
        });
    };
    return OpenTriviaDBPicker;
}());
exports.OpenTriviaDBPicker = OpenTriviaDBPicker;
